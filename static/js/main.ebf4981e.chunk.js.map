{"version":3,"sources":["Word.js","NameForm.js","List.js","Countdown.js","Board.js","index.js"],"names":["Word","name","guessed","Object","classCallCheck","this","NameForm","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","value","callback","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","preventDefault","react_default","a","createElement","onSubmit","type","onChange","autoFocus","React","Component","List","list","words","map","word","index","setup","key","guessing","Countdown","seconds","active","start","decreaseTime","startCallback","setTimeout","endCallback","onClick","Board","rounds","initialState","labels","guessedLabels","round","resetGame","labelsContains","addLabel","checkProgression","startGame","progressRound","shuffle","guessTop","passTop","startGuessing","stopGuessing","contains","forEach","trim","slice","push","length","i","j","Math","floor","random","temp","first","shift","src_List","controls","src_NameForm","pass","instructions","className","countdown","src_Countdown","guessedWords","Game","src_Board","ReactDOM","render","src_Game","document","getElementById"],"mappings":"8KAOeA,EANX,SAAAA,EAAYC,EAAMC,GAAUC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACxBK,KAAKJ,KAAOA,EACZI,KAAKH,QAAUA,GC+BRI,cA/BX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAL,OAAAC,EAAA,EAAAD,CAAAE,KAAAC,IACfE,EAAAL,OAAAM,EAAA,EAAAN,CAAAE,KAAAF,OAAAO,EAAA,EAAAP,CAAAG,GAAAK,KAAAN,KAAME,KACDK,MAAQ,CAAEC,MAAO,GAAIC,SAAUP,EAAMO,UAE1CN,EAAKO,aAAeP,EAAKO,aAAaC,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KACpBA,EAAKU,aAAeV,EAAKU,aAAaF,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KALLA,4EAQNW,GACTd,KAAKe,SAAS,CAAEP,MAAOM,EAAME,OAAOR,6CAG3BM,GACTA,EAAMG,iBACNjB,KAAKO,MAAME,SAAST,KAAKO,MAAMC,OAC/BR,KAAKe,SAAS,CAAEP,MAAO,sCAIvB,OACIU,EAAAC,EAAAC,cAAA,QAAMC,SAAUrB,KAAKa,cACjBK,EAAAC,EAAAC,cAAA,6BAEIF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOd,MAAOR,KAAKO,MAAMC,MAAOe,SAAUvB,KAAKU,aAAcc,WAAS,KAEtFN,EAAAC,EAAAC,cAAA,SAAOE,KAAK,SAASd,MAAM,gBA1BpBiB,IAAMC,WC2BdC,mLA1BF,IAAAxB,EAAAH,KACD4B,EAAO5B,KAAKE,MAAM2B,MAAMC,IAAI,SAACC,EAAMC,GACnC,OAAI7B,EAAKD,MAAM+B,MAEJf,EAAAC,EAAAC,cAAA,MAAIc,IAAKH,EAAKnC,MAAOmC,EAAKnC,MAE7BmC,EAAKlC,QAEEqB,EAAAC,EAAAC,cAAA,MAAIc,IAAKH,EAAKnC,MAAMsB,EAAAC,EAAAC,cAAA,WAAMW,EAAKnC,OAElCO,EAAKD,MAAMiC,UAAsB,IAAVH,EAEhBd,EAAAC,EAAAC,cAAA,MAAIc,IAAKH,EAAKnC,MAAOmC,EAAKnC,MAItC,OAEX,OACIsB,EAAAC,EAAAC,cAAA,UACKQ,UArBEH,IAAMC,WCsCVU,cArCX,SAAAA,EAAYlC,GAAO,IAAAC,EAAA,OAAAL,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,IACfjC,EAAAL,OAAAM,EAAA,EAAAN,CAAAE,KAAAF,OAAAO,EAAA,EAAAP,CAAAsC,GAAA9B,KAAAN,KAAME,KACDK,MAAQ,CACT8B,QAASnC,EAAMmC,QACfC,QAAQ,GAGZnC,EAAKoC,MAAQpC,EAAKoC,MAAM5B,KAAXb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KACbA,EAAKqC,aAAerC,EAAKqC,aAAa7B,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KARLA,uEAYfH,KAAKE,MAAMuC,gBACXzC,KAAKe,SAAS,CAAEuB,QAAQ,IACxBI,WAAW1C,KAAKwC,aAAc,4CAI9B,GAA2B,IAAvBxC,KAAKO,MAAM8B,QAAe,CAC1B,IAAIA,EAAUrC,KAAKO,MAAM8B,QAAU,EACnCrC,KAAKe,SAAS,CAAEsB,QAASA,IACzBK,WAAW1C,KAAKwC,aAAc,UAE9BxC,KAAKE,MAAMyC,cACX3C,KAAKe,SAAS,CAAEsB,QAASrC,KAAKE,MAAMmC,QAASC,QAAQ,qCAKzD,OACIpB,EAAAC,EAAAC,cAAA,YACMpB,KAAKO,MAAM+B,QAAUpB,EAAAC,EAAAC,cAAA,SAAOE,KAAK,SAASd,MAAM,QAAQoC,QAAS5C,KAAKuC,QAD5E,IACwFvC,KAAKO,MAAM8B,QADnG,8BA/BYZ,IAAMC,WCyJfmB,cApIX,SAAAA,EAAY3C,GAAO,IAAAC,EAAA,OAAAL,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,IACf1C,EAAAL,OAAAM,EAAA,EAAAN,CAAAE,KAAAF,OAAAO,EAAA,EAAAP,CAAA+C,GAAAvC,KAAAN,KAAME,KAhBV4C,OAAS,CACL,2GACA,iNACA,oCACA,8BAWe3C,EARnB4C,aAAe,CACXC,OAAQ,GACRC,cAAe,GACfC,MAAO,EACPjB,OAAO,EACPE,UAAU,GAKVhC,EAAKI,MAAQJ,EAAK4C,aAClB5C,EAAKgD,UAAYhD,EAAKgD,UAAUxC,KAAfb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KACjBA,EAAKiD,eAAiBjD,EAAKiD,eAAezC,KAApBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KACtBA,EAAKkD,SAAWlD,EAAKkD,SAAS1C,KAAdb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KAChBA,EAAKmD,iBAAmBnD,EAAKmD,iBAAiB3C,KAAtBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KACxBA,EAAKoD,UAAYpD,EAAKoD,UAAU5C,KAAfb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KACjBA,EAAKqD,cAAgBrD,EAAKqD,cAAc7C,KAAnBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KACrBA,EAAKsD,QAAUtD,EAAKsD,QAAQ9C,KAAbb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KACfA,EAAKuD,SAAWvD,EAAKuD,SAAS/C,KAAdb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KAChBA,EAAKwD,QAAUxD,EAAKwD,QAAQhD,KAAbb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KACfA,EAAKyD,cAAgBzD,EAAKyD,cAAcjD,KAAnBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KACrBA,EAAK0D,aAAe1D,EAAK0D,aAAalD,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAK,KAbLA,2EAiBfH,KAAKe,SAASf,KAAK+C,qDAGRnD,GACX,IAAIkE,GAAW,EAMf,OALA9D,KAAKO,MAAMyC,OAAOe,QAAQ,SAAAhC,GAClBA,EAAKnC,OAASA,IACdkE,GAAW,KAGZA,mCAGFlE,GAEL,GAAa,MADbA,EAAOA,EAAKoE,UACQhE,KAAKoD,eAAexD,GAAO,CAC3C,IAAMoD,EAAShD,KAAKO,MAAMyC,OAAOiB,QACjCjB,EAAOkB,KAAK,IAAIvE,EAAKC,GAAM,IAC3BI,KAAKe,SAAS,CAAEiC,OAAQA,gDAK5B,GAAiC,IAA7BhD,KAAKO,MAAMyC,OAAOmB,OAClB,GAAwB,GAApBnE,KAAKO,MAAM2C,MACXlD,KAAKmD,gBACF,CACHnD,KAAK6D,eACL7D,KAAKwD,gBACL,IAAMP,EAAgBjD,KAAKO,MAAM0C,cAAcgB,QAC/ChB,EAAcc,QAAQ,SAAChC,GAAUA,EAAKlC,SAAU,IAChDG,KAAKe,SAAS,CAAEiC,OAAQC,EAAeA,cAAe,IAAMjD,KAAKyD,8CAMxC,IAA7BzD,KAAKO,MAAMyC,OAAOmB,QAClBnE,KAAKe,SAAS,CAAEkB,OAAO,GAASjC,KAAKyD,iDAKzC,IAAIP,EAAQlD,KAAKO,MAAM2C,MAAQ,EAC/BlD,KAAKe,SAAS,CAAEmC,MAAOA,sCAKvB,IADA,IAAMF,EAAShD,KAAKO,MAAMyC,OAAOiB,QACxBG,EAAIpB,EAAOmB,OAAS,EAAGC,EAAI,EAAGA,IAAK,CACxC,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IACpCK,EAAOzB,EAAOoB,GAClBpB,EAAOoB,GAAKpB,EAAOqB,GACnBrB,EAAOqB,GAAKI,EAEhBzE,KAAKe,SAAS,CAAEiC,OAAQA,uCAIxB,IAAMA,EAAShD,KAAKO,MAAMyC,OAAOiB,QAC3BhB,EAAgBjD,KAAKO,MAAM0C,cAAcgB,QACzCS,EAAQ1B,EAAO2B,QACrBD,EAAM7E,SAAU,EAChBoD,EAAciB,KAAKQ,GACnB1E,KAAKe,SAAS,CAAEiC,OAAQA,EAAQC,cAAeA,GAAiBjD,KAAKsD,oDAIrE,IAAMN,EAAShD,KAAKO,MAAMyC,OAAOiB,QAC3BS,EAAQ1B,EAAO2B,QACrB3B,EAAOkB,KAAKQ,GACZ1E,KAAKe,SAAS,CAAEiC,OAAQA,4CAIxBhD,KAAKe,SAAS,CAAEoB,UAAU,2CAI1BnC,KAAK2D,UACL3D,KAAKe,SAAS,CAAEoB,UAAU,qCAI1B,IAAIN,EAAQX,EAAAC,EAAAC,cAACwD,EAAD,CAAM/C,MAAO7B,KAAKO,MAAMyC,OAAQf,MAAOjC,KAAKO,MAAM0B,MAAOE,SAAUnC,KAAKO,MAAM4B,WAE1F,GAAInC,KAAKO,MAAM0B,MAAO,CAClB,IAAI4C,EAAW3D,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAC0D,EAAD,CAAUrE,SAAUT,KAAKqD,WAAYnC,EAAAC,EAAAC,cAAA,SAAOE,KAAK,SAASd,MAAM,aAAaoC,QAAS5C,KAAKuD,aAE/G,OACIrC,EAAAC,EAAAC,cAAA,WACKyD,EACAhD,GAIT,IAAIkD,EAA4B,IAArB/E,KAAKO,MAAM2C,OAAehC,EAAAC,EAAAC,cAAA,SAAOE,KAAK,SAASd,MAAM,SAASoC,QAAS5C,KAAK2D,UACnFkB,EAAW3D,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,SAASd,MAAM,UAAUoC,QAAS5C,KAAK0D,WAAaqB,GAChFC,EAAe9D,EAAAC,EAAAC,cAAA,OAAK6D,UAAU,gBAAgBjF,KAAKO,MAAM2C,MAAQ,GAAKlD,KAAK8C,OAAO9C,KAAKO,MAAM2C,MAAQ,IACrGgC,EAAYhE,EAAAC,EAAAC,cAAC+D,EAAD,CAAW9C,QAAQ,KAAKI,cAAezC,KAAK4D,cAAejB,YAAa3C,KAAK6D,aAAc3B,IAAKlC,KAAKO,MAAM2C,QACvHkC,EAAelE,EAAAC,EAAAC,cAACwD,EAAD,CAAM/C,MAAO7B,KAAKO,MAAM0C,cAAehB,MAAOjC,KAAKO,MAAM0B,MAAOE,SAAUnC,KAAKO,MAAM4B,WAExG,OACIjB,EAAAC,EAAAC,cAAA,WACK4D,EACAE,EACAlF,KAAKO,MAAM4B,UAAY0C,EACvBhD,EACAuD,UA7ID3D,IAAMC,WCFpB2D,mLAEE,OACInE,EAAAC,EAAAC,cAAA,OAAK6D,UAAU,QACX/D,EAAAC,EAAAC,cAAA,OAAK6D,UAAU,cACX/D,EAAAC,EAAAC,cAACkE,EAAD,eALD7D,IAAMC,WAczB6D,IAASC,OACLtE,EAAAC,EAAAC,cAACqE,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.ebf4981e.chunk.js","sourcesContent":["class Word {\n    constructor(name, guessed) {\n        this.name = name;\n        this.guessed = guessed;\n    }\n}\n\nexport default Word;\n","import React from 'react';\n\nclass NameForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: '', callback: props.callback };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.state.callback(this.state.value);\n        this.setState({ value: '' });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    New word:&nbsp;\n                    <input type=\"text\" value={this.state.value} onChange={this.handleChange} autoFocus />\n                </label>\n                <input type=\"submit\" value=\"Add\" />\n            </form>\n        );\n    }\n}\n\nexport default NameForm;\n","import React from 'react';\n\nclass List extends React.Component {\n    render() {\n        let list = this.props.words.map((word, index) => {\n            if (this.props.setup) {\n                // during setup, show all words\n                return <li key={word.name}>{word.name}</li>;\n            } else {\n                if (word.guessed) {\n                    // during the game, show all guessed words\n                    return <li key={word.name}><del>{word.name}</del></li>;\n                } else {\n                    if (this.props.guessing && index === 0) {\n                        // during the game, show only the top word from the active stack\n                        return <li key={word.name}>{word.name}</li>;\n                    }\n                }\n            }\n            return null;\n        });\n        return (\n            <ul>\n                {list}\n            </ul>\n        );\n    }\n}\n\nexport default List;\n","import React from 'react';\n\nclass Countdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            seconds: props.seconds,\n            active: false,\n        }\n\n        this.start = this.start.bind(this);\n        this.decreaseTime = this.decreaseTime.bind(this);\n    }\n\n    start() {\n        this.props.startCallback();\n        this.setState({ active: true });\n        setTimeout(this.decreaseTime, 1000);\n    }\n\n    decreaseTime() {\n        if (this.state.seconds !== 0) {\n            let seconds = this.state.seconds - 1;\n            this.setState({ seconds: seconds });\n            setTimeout(this.decreaseTime, 1000);\n        } else {\n            this.props.endCallback();\n            this.setState({ seconds: this.props.seconds, active: false });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.active && <input type=\"submit\" value=\"Start\" onClick={this.start} />} {this.state.seconds} seconds remaining.\n            </div>\n        );\n    }\n}\n\nexport default Countdown;\n","import React from 'react';\n\nimport Word from './Word';\nimport NameForm from './NameForm';\nimport List from './List';\nimport Countdown from './Countdown';\n\nclass Board extends React.Component {\n    rounds = [\n        \"Első kör nincs passz, akárhány tipp, mindent lehet, kivéve kimondani a keresett szót\",\n        \"Második körtől végig van passz, de csak egy tipp van, ha félre, akkor megy az aljára. Második körben max egy szó, mutogatás, hangutánzás bármennyi és mutogatás\",\n        \"Harmadik kör csak mutogatás\",\n        \"Negyedik kör egy póz\",\n    ];\n\n    initialState = {\n        labels: [],\n        guessedLabels: [],\n        round: 1,\n        setup: true,\n        guessing: false,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n        this.resetGame = this.resetGame.bind(this);\n        this.labelsContains = this.labelsContains.bind(this);\n        this.addLabel = this.addLabel.bind(this);\n        this.checkProgression = this.checkProgression.bind(this);\n        this.startGame = this.startGame.bind(this);\n        this.progressRound = this.progressRound.bind(this);\n        this.shuffle = this.shuffle.bind(this);\n        this.guessTop = this.guessTop.bind(this);\n        this.passTop = this.passTop.bind(this);\n        this.startGuessing = this.startGuessing.bind(this);\n        this.stopGuessing = this.stopGuessing.bind(this);\n    }\n\n    resetGame() {\n        this.setState(this.initialState);\n    }\n\n    labelsContains(name) {\n        let contains = false;\n        this.state.labels.forEach(word => {\n            if (word.name === name) {\n                contains = true;\n            }\n        });\n        return contains;\n    }\n\n    addLabel(name) {\n        name = name.trim();\n        if (name !== \"\" && !this.labelsContains(name)) {\n            const labels = this.state.labels.slice();\n            labels.push(new Word(name, false));\n            this.setState({ labels: labels });\n        }\n    }\n\n    checkProgression() {\n        if (this.state.labels.length === 0) {\n            if (this.state.round == 4) {\n                this.resetGame();\n            } else {\n                this.stopGuessing();\n                this.progressRound();\n                const guessedLabels = this.state.guessedLabels.slice();\n                guessedLabels.forEach((word) => {word.guessed = false;});\n                this.setState({ labels: guessedLabels, guessedLabels: [] }, this.shuffle);\n            }\n        }\n    }\n\n    startGame() {\n        if (this.state.labels.length !== 0) {\n            this.setState({ setup: false }, this.shuffle);\n        }\n    }\n\n    progressRound() {\n        let round = this.state.round + 1;\n        this.setState({ round: round });\n    }\n\n    shuffle() {\n        const labels = this.state.labels.slice();\n        for (let i = labels.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            let temp = labels[i];\n            labels[i] = labels[j];\n            labels[j] = temp;\n        }\n        this.setState({ labels: labels });\n    }\n\n    guessTop() {\n        const labels = this.state.labels.slice();\n        const guessedLabels = this.state.guessedLabels.slice();\n        const first = labels.shift();\n        first.guessed = true;\n        guessedLabels.push(first);\n        this.setState({ labels: labels, guessedLabels: guessedLabels }, this.checkProgression);\n    }\n\n    passTop() {\n        const labels = this.state.labels.slice();\n        const first = labels.shift();\n        labels.push(first);\n        this.setState({ labels: labels });\n    }\n\n    startGuessing() {\n        this.setState({ guessing: true });\n    }\n\n    stopGuessing() {\n        this.passTop();\n        this.setState({ guessing: false });\n    }\n\n    render() {\n        let words = <List words={this.state.labels} setup={this.state.setup} guessing={this.state.guessing} />;\n\n        if (this.state.setup) {\n            let controls = <div><NameForm callback={this.addLabel} /><input type=\"button\" value=\"Start Game\" onClick={this.startGame} /></div>;\n\n            return (\n                <div>\n                    {controls}\n                    {words}\n                </div>\n            );\n        } else {\n            let pass = this.state.round !== 1 && <input type=\"button\" value=\"Passed\" onClick={this.passTop} />;\n            let controls = <div><input type=\"button\" value=\"Guessed\" onClick={this.guessTop} />{pass}</div>;\n            let instructions = <div className=\"instructions\">{this.state.round > 0 && this.rounds[this.state.round - 1]}</div>;\n            let countdown = <Countdown seconds=\"30\" startCallback={this.startGuessing} endCallback={this.stopGuessing} key={this.state.round} />;\n            let guessedWords = <List words={this.state.guessedLabels} setup={this.state.setup} guessing={this.state.guessing} />;\n\n            return (\n                <div>\n                    {instructions}\n                    {countdown}\n                    {this.state.guessing && controls}\n                    {words}\n                    {guessedWords}\n                </div>\n            );\n        }\n    }\n}\n\nexport default Board;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Board from './Board';\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board />\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}