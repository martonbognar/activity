{"version":3,"sources":["Word.js","NameForm.js","Label.js","Countdown.js","Board.js","index.js"],"names":["Word","name","guessed","Object","classCallCheck","this","NameForm","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","value","callback","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","preventDefault","react_default","a","createElement","onSubmit","type","onChange","React","Component","Label","word","Countdown","seconds","active","start","decreaseTime","startCallback","setTimeout","endCallback","onClick","Board","rounds","labels","guessedLabels","round","setup","guessing","addLabel","checkProgression","startGame","progressRound","shuffle","guessTop","passTop","startGuessing","stopGuessing","indexOf","slice","push","console","log","length","i","j","Math","floor","random","temp","first","shift","words","map","element","index","src_Label","key","controls","src_NameForm","instructions","className","countdown","src_Countdown","guessedWords","Game","src_Board","ReactDOM","render","src_Game","document","getElementById"],"mappings":"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","file":"static/js/main.4d40397e.chunk.js","sourcesContent":["class Word {\n    constructor(name, guessed) {\n        this.name = name;\n        this.guessed = guessed;\n    }\n}\n\nexport default Word;\n","import React from 'react';\n\nclass NameForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: '', callback: props.callback };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.state.callback(this.state.value);\n        this.setState({ value: '' });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Name:\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        );\n    }\n}\n\nexport default NameForm;\n","import React from 'react';\n\nclass Label extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            word: props.word,\n        }\n    }\n\n    render() {\n        if (!this.state.word.guessed) {\n            return (\n                <li>\n                    {this.state.word.name}\n                </li>\n            )\n        } else {\n            return (\n                <li>\n                    <del>{this.state.word.name}</del>\n                </li>\n            )\n        }\n    }\n}\n\nexport default Label;\n","import React from 'react';\n\nclass Countdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            seconds: props.seconds,\n            active: false,\n        }\n\n        this.start = this.start.bind(this);\n        this.decreaseTime = this.decreaseTime.bind(this);\n    }\n\n    start() {\n        this.props.startCallback();\n        this.setState({ active: true });\n        setTimeout(this.decreaseTime, 1000);\n    }\n\n    decreaseTime() {\n        if (this.state.seconds !== 0) {\n            let seconds = this.state.seconds - 1;\n            this.setState({ seconds: seconds });\n            setTimeout(this.decreaseTime, 1000);\n        } else {\n            this.props.endCallback();\n            this.setState({ seconds: this.props.seconds, active: false });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.seconds} seconds remainig.\n                {!this.state.active && <input type=\"submit\" value=\"Start\" onClick={this.start} />}\n            </div>\n        );\n    }\n}\n\nexport default Countdown;\n","import React from 'react';\n\nimport Word from './Word';\nimport NameForm from './NameForm';\nimport Label from './Label';\nimport Countdown from './Countdown';\n\nclass Board extends React.Component {\n    rounds = [\n        \"Első kör nincs passz, akárhány tipp, mindent lehet, kivéve kimondani a keresett szót\",\n        \"Második körtől végig van passz, de csak egy tipp van, ha félre, akkor megy az aljára. Második körben max egy szó, mutogatás, hangutánzás bármennyi és mutogatás\",\n        \"Harmadik kör csak mutogatás\",\n        \"Negyedik kör egy póz\",\n    ];\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            labels: [],\n            guessedLabels: [],\n            round: 1,\n            setup: true,\n            guessing: false,\n        }\n        this.addLabel = this.addLabel.bind(this);\n        this.checkProgression = this.checkProgression.bind(this);\n        this.startGame = this.startGame.bind(this);\n        this.progressRound = this.progressRound.bind(this);\n        this.shuffle = this.shuffle.bind(this);\n        this.guessTop = this.guessTop.bind(this);\n        this.passTop = this.passTop.bind(this);\n        this.startGuessing = this.startGuessing.bind(this);\n        this.stopGuessing = this.stopGuessing.bind(this);\n    }\n\n    addLabel(name) {\n        if (name !== \"\" && this.state.labels.indexOf(name) === -1) { // TODO duplicate check\n            const labels = this.state.labels.slice();\n            labels.push(new Word(name, false));\n            this.setState({ labels: labels });\n        }\n    }\n\n    checkProgression() {\n        console.log(this.state.labels.length);\n        if (this.state.labels.length === 0) {\n            this.progressRound();\n            const labels = this.state.labels.slice();\n            const guessedLabels = this.state.guessedLabels.slice();\n            this.setState({ labels: guessedLabels, guessedLabels: labels }, this.shuffle);\n        }\n    }\n\n    startGame() {\n        if (this.state.labels.length !== 0) {\n            this.setState({ setup: false });\n        }\n    }\n\n    progressRound() {\n        let round = this.state.round + 1;\n        this.setState({ round: round });\n    }\n\n    shuffle() {\n        const labels = this.state.labels.slice();\n        for (let i = labels.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            let temp = labels[i];\n            labels[i] = labels[j];\n            labels[j] = temp;\n        }\n        this.setState({ labels: labels });\n    }\n\n    guessTop() {\n        const labels = this.state.labels.slice();\n        const guessedLabels = this.state.guessedLabels.slice();\n        const first = labels.shift();\n        first.guessed = true;\n        guessedLabels.push(first);\n        this.setState({ labels: labels, guessedLabels: guessedLabels }, this.checkProgression);\n    }\n\n    passTop() {\n        const labels = this.state.labels.slice();\n        const first = labels.shift();\n        labels.push(first);\n        this.setState({ labels: labels });\n    }\n\n    startGuessing() {\n        this.setState({ guessing: true });\n    }\n\n    stopGuessing() {\n        this.passTop();\n        this.setState({ guessing: false });\n    }\n\n    render() {\n        let words = <ul>{this.state.labels.map((element, index) => <Label key={element.name} word={element} />)}</ul>;\n\n        if (this.state.setup) {\n            let controls = <div><NameForm callback={this.addLabel} /><input type=\"button\" value=\"Start\" onClick={this.startGame} /></div>;\n\n            return (\n                <div>\n                    {controls}\n                    {words}\n                </div>\n            );\n        } else {\n            let controls = <div><input type=\"button\" value=\"Guessed\" onClick={this.guessTop} /><input type=\"button\" value=\"Pass\" onClick={this.passTop} /></div>;\n            let instructions = <div className=\"instructions\">{this.state.round > 0 && this.rounds[this.state.round - 1]}</div>;\n            let countdown = <Countdown seconds=\"30\" startCallback={this.startGuessing} endCallback={this.stopGuessing} />;\n            let guessedWords = <ul>{this.state.guessedLabels.map((element, index) => <Label key={element.name} word={element} />)}</ul>;\n\n            return (\n                <div>\n                    {this.state.guessing && controls}\n                    {instructions}\n                    {countdown}\n                    {words}\n                    {guessedWords}\n                </div>\n            );\n        }\n    }\n}\n\nexport default Board;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Board from './Board';\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board />\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}